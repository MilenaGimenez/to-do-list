{"version":3,"sources":["firebase-config.js","components/Form.js","components/Todo.js","components/TodoList.js","components/Contador.jsx","App.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","Form","setTodos","todos","inputText","setInputText","setStatus","useState","error","setError","guardarEnFirebase","tarea","collection","add","then","docRef","console","log","id","catch","onChange","e","target","value","type","className","disabled","trim","length","onClick","setTimeout","preventDefault","text","completed","Math","random","name","Todo","todo","editarCompleted","doc","set","delete","TodoList","filteredTodos","map","Contador","counter","filter","App","status","setFilteredTodos","setCounter","useEffect","onSnapshot","querySnapshot","docs","forEach","push","data","filteredHandler","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09bd7846.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyAsoddnuZIT6aqqLeWJ8OAu32IyF2YJtHE\",\r\n  authDomain: \"todo-list-ac2a0.firebaseapp.com\",\r\n  projectId: \"todo-list-ac2a0\",\r\n  storageBucket: \"todo-list-ac2a0.appspot.com\",\r\n  messagingSenderId: \"185678045488\",\r\n  appId: \"1:185678045488:web:4bc72c63e60d0c02ef28f5\"\r\n};\r\n  // Initialize Firebase\r\n  const fb = firebase.initializeApp(firebaseConfig);\r\n  export const db = fb.firestore()","// -------------- Componente de formulario de tareas --------------\r\n\r\n//Import de hook y de variable de firebase\r\nimport {useState} from 'react';\r\nimport {db} from '../firebase-config';\r\n\r\n//Función del formulario\r\nconst Form = ({setTodos, todos, inputText, setInputText, setStatus}) => {\r\n    //Estado de error\r\n    const [error, setError] = useState(false);\r\n\r\n    //Función submit tarea\r\n    const submitTodoHandler = e => {\r\n        if(inputText.trim().length === 0){\r\n            setError(true);\r\n            setTimeout(()=>{\r\n                setError(false);\r\n            },1000);\r\n            return;\r\n        }    \r\n\r\n        setError(false);\r\n\r\n        e.preventDefault();\r\n            setTodos([...todos, {\r\n                text: inputText,\r\n                completed: false,\r\n                id: Math.random() * 10000\r\n            }])\r\n\r\n        guardarEnFirebase({\r\n            text: inputText,\r\n            completed: false,\r\n            id: Math.random() * 10000\r\n            })\r\n        setInputText('')\r\n    };\r\n\r\n    //Función set nombre de tarea\r\n    const inputTextHandler = e => setInputText(e.target.value);\r\n    \r\n    //Función de set status de tarea\r\n    const statusHandler = e => setStatus(e.target.value);    \r\n\r\n    //Función guardar datos en firebase\r\n    const guardarEnFirebase = tarea => {\r\n        db.collection(\"todos\").add(tarea)\r\n        .then((docRef) => {\r\n        console.log(\"Document written with ID: \", docRef.id);\r\n        })\r\n        .catch((error) => {\r\n        console.error(\"Error adding document: \", error);\r\n        });\r\n    };\r\n   \r\n    return(\r\n        <form>\r\n            <input \r\n                onChange={inputTextHandler}\r\n                type=\"text\" \r\n                value={inputText}\r\n                className=\"todo-input\"\r\n            />\r\n            <button \r\n                disabled={inputText.trim().length\r\n                === 0}\r\n                onClick={submitTodoHandler}\r\n                className=\"todo-button\"\r\n                type=\"submit\"\r\n            >\r\n                <i className=\"fas fa-plus-square\"></i>\r\n            </button>\r\n            <div className=\"select\">\r\n                <select \r\n                    name=\"todos\"\r\n                    className=\"filter-todo\"\r\n                    onChange={statusHandler}\r\n                >\r\n                    <option value=\"all\">Todas</option>\r\n                    <option value=\"completed\">Completas</option>\r\n                    <option value=\"uncompleted\">Incompletas</option>\r\n                </select>\r\n            </div>            \r\n            <div>               \r\n                <p className=\"alert-error\">{error && 'Todos los datos son obligatorios!!'}</p> \r\n            </div>  \r\n        </form>     \r\n    );\r\n};\r\n\r\nexport default Form;","// -------------- Componente de Todo (tareas)--------------\r\n\r\n//Import de variable de firebase\r\nimport {db} from '../firebase-config';\r\n\r\n//Función de mostrar tarea\r\nconst Todo = ({todo}) => {\r\n    //Función de eliminar tarea\r\n    const deleteHandler = () => {\r\n        db.collection(\"todos\").doc(todo.id).delete().then(() => {\r\n          console.log(\"Document successfully deleted!\");\r\n        }).catch((error) => {\r\n            console.error(\"Error removing document: \", error);\r\n        });\r\n    };\r\n\r\n    //Función de tarea completa\r\n    const completeHandler = () => editarCompleted(todo)\r\n    \r\n    //Función de editar completed\r\n    const editarCompleted = tarea => {\r\n        db.collection(\"todos\").doc(tarea.id).set({\r\n          ...tarea, completed: !tarea.completed\r\n        })\r\n        .then(() => {\r\n          console.log(\"Document successfully written!\");\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error writing document: \", error);\r\n        });\r\n    };\r\n\r\n    return (\r\n          <div className=\"todo\">\r\n              <li className={`todo-item ${todo.completed && \"completed\"}`}>{todo.text}</li>\r\n              <button onClick={completeHandler} className={`complete-btn ${todo.completed && \"boton-rojo\"}`}>\r\n                  <i className=\"fas fa-check\"></i>\r\n              </button>\r\n              <button onClick={deleteHandler} className=\"trash-btn\">\r\n                  <i className=\"fas fa-trash\"></i>\r\n              </button>\r\n          </div>\r\n    );\r\n};\r\n\r\nexport default Todo;\r\n","// -------------- Componente de TodoList (Filtro de tareas)--------------\r\n\r\n//Import de componente Todo\r\nimport Todo from './Todo';\r\n\r\n//Función para devolver tareas filtradas\r\nconst TodoList = ({filteredTodos}) => {\r\n    return(\r\n        <div>\r\n            <div className=\"todo-container\">\r\n                <ul className=\"todo-list\">\r\n                    {filteredTodos.map(todo => (\r\n                        <Todo \r\n                            todo={todo}\r\n                            key={todo.id}\r\n                        />\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoList;","// -------------- Componente de contador de tareas pendientes --------------\r\n\r\nconst Contador = ({todos, counter}) => {  \r\n    counter = todos.length\r\n    return (\r\n        <div className=\"contador-tareas\">\r\n          {counter === 0 ? <span>¡No quedan tareas pendientes!</span> : <span>Te quedan {todos.filter((todo) => !todo.completed).length} tareas por terminar</span>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Contador;","//Import de hooks y variable de firebase\r\nimport {useState, useEffect} from 'react';\r\nimport {db} from './firebase-config'\r\n\r\n//Import de hoja de estilos\r\nimport './App.css';\r\n\r\n//Import de componentes\r\nimport Form from './components/Form';\r\nimport TodoList from './components/TodoList';\r\nimport Contador from './components/Contador';\r\n\r\n\r\nfunction App() {  \r\n  //Estados\r\n  const [inputText, setInputText] = useState('');\r\n  const [todos, setTodos] = useState([]);\r\n  const [status, setStatus] = useState('all');\r\n  const [filteredTodos, setFilteredTodos] = useState([]);\r\n  const [counter, setCounter] = useState([]);\r\n\r\n  //Función traer datos desde Firebase\r\n  const traerDesdeFirebase = () => {\r\n    db.collection(\"todos\").onSnapshot((querySnapshot) => {\r\n      const docs = [];\r\n      querySnapshot.forEach((doc) => {\r\n          docs.push({...doc.data(), id: doc.id})\r\n        });\r\n        setTodos(docs)\r\n    });\r\n  };\r\n\r\n  //UseEffect de traer datos desde Firebase\r\n  useEffect(traerDesdeFirebase, []);\r\n\r\n  //UseEffect de filtrar datos por completos, incompletos y todos\r\n  useEffect(() => {\r\n    const filteredHandler = () => {\r\n      switch(status) {\r\n        case 'completed' :\r\n          setFilteredTodos(todos.filter(tarea => tarea.completed === true))\r\n        break;\r\n        case 'uncompleted' :\r\n          setFilteredTodos(todos.filter(tarea => tarea.completed === false))\r\n        break;\r\n        default:\r\n          setFilteredTodos(todos);\r\n      };\r\n    };\r\n    filteredHandler();\r\n  },[todos, status]);\r\n \r\n\r\n  return (\r\n    <div>\r\n      <header>\r\n        <h1>Todo List</h1>\r\n      </header>\r\n      <Form \r\n        todos={todos}\r\n        setTodos={setTodos}\r\n        inputText={inputText}\r\n        setInputText={setInputText}\r\n        setStatus={setStatus}\r\n        status={status}\r\n      />\r\n      <Contador \r\n        todos={todos}\r\n        counter={counter}\r\n        setCounter={setCounter}\r\n      />\r\n      <TodoList \r\n        todos={todos}\r\n        setTodos={setTodos}\r\n        filteredTodos={filteredTodos}        \r\n      />      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './firebase-config'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}