{"version":3,"sources":["firebase-config.js","components/Form.js","components/Todo.js","components/TodoList.js","components/Contador.jsx","App.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","Form","setTodos","todos","inputText","setInputText","setStatus","guardarEnFirebase","tarea","collection","add","then","docRef","console","log","id","catch","error","onChange","e","target","value","type","className","disabled","trim","length","onClick","preventDefault","text","completed","Math","random","name","Todo","todo","editarCompleted","doc","set","delete","TodoList","filteredTodos","map","Contador","class","filter","App","useState","status","setFilteredTodos","useEffect","get","querySnapshot","docs","forEach","push","data","filteredHandler","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e84c4a7a.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBPxiN6w1_GIspm2HAHSMP1EBIya2ldeRE\",\r\n    authDomain: \"todolist-5977d.firebaseapp.com\",\r\n    projectId: \"todolist-5977d\",\r\n    storageBucket: \"todolist-5977d.appspot.com\",\r\n    messagingSenderId: \"570680421845\",\r\n    appId: \"1:570680421845:web:80414bbb21f79d4296215c\"\r\n  };\r\n  // Initialize Firebase\r\n  const fb = firebase.initializeApp(firebaseConfig);\r\n  export const db = fb.firestore() //guardar en variable la base de datos\r\n  //export para hacerlo accesible a cualquier archivo de nuestra app","import {db} from '../firebase-config';\r\n\r\nconst Form = ({setTodos, todos, inputText, setInputText, setStatus}) => {\r\n    const submitTodoHandler = e => {\r\n        e.preventDefault();\r\n        //actualiza la variable que era un arr vacio haciendo una copia del arreglo y aÃ±ade un objeto nuevo:\r\n        //cada que se hace click, se guarda el input en un objeto\r\n        setTodos([...todos, {\r\n            text: inputText,\r\n            completed: false,\r\n            id: Math.random() * 10000    \r\n        }])\r\n        guardarEnFirebase({\r\n            text: inputText,\r\n            completed: false,\r\n            id: Math.random() * 10000    \r\n        })\r\n        //para que cuando acabe estes vacio\r\n        setInputText('')\r\n    }\r\n\r\n    const inputTextHandler = e => {\r\n        setInputText(e.target.value)\r\n    }\r\n\r\n    const statusHandler = e => {\r\n        setStatus(e.target.value)\r\n    }\r\n\r\n    const guardarEnFirebase = tarea => {\r\n        // Add a new document with a generated id.\r\n        db.collection(\"todos\").add(tarea)\r\n        .then((docRef) => {\r\n            console.log(\"Document written with ID: \", docRef.id);\r\n        })\r\n        .catch((error) => {\r\n            console.error(\"Error adding document: \", error);\r\n        });\r\n\r\n    }\r\n   \r\n    return(\r\n        <form>\r\n            <input \r\n                onChange={inputTextHandler}\r\n                type=\"text\" \r\n                value={inputText}\r\n                className=\"todo-input\"\r\n            />\r\n            <button \r\n                disabled={inputText.trim().length\r\n                === 0}\r\n                onClick={submitTodoHandler}\r\n                className=\"todo-button\"\r\n                type=\"submit\"\r\n            >\r\n                <i className=\"fas fa-plus-square\"></i>\r\n            </button>\r\n            <div className=\"select\">\r\n                <select \r\n                    name=\"todos\"\r\n                    className=\"filter-todo\"\r\n                    onChange={statusHandler}\r\n                >\r\n                    <option value=\"all\">Todas</option>\r\n                    <option value=\"completed\">Completas</option>\r\n                    <option value=\"uncomplete\">Incompletas</option>\r\n                </select>\r\n            </div>\r\n        </form>        \r\n    );\r\n};\r\n\r\nexport default Form;","import {db} from '../firebase-config';\r\n\r\nconst Todo = ({todo, setTodos, todos}) => {\r\n    const deleteHandler = () => {\r\n        // setTodos(todos.filter(tarea => tarea.id !== todo.id))\r\n        // console.log(todo.id)\r\n        db.collection(\"todos\").doc(todo.id).delete().then(() => {\r\n          console.log(\"Document successfully deleted!\");\r\n        }).catch((error) => {\r\n            console.error(\"Error removing document: \", error);\r\n        });\r\n    }\r\n\r\n    const completeHandler = () => {\r\n        // setTodos(todos.map(item => {\r\n        //   if(todo.id === item.id){\r\n        //     return {\r\n        //       ...item, completed: !item.completed\r\n        //     }\r\n        //   }\r\n        //   return item;\r\n        // }))\r\n        editarCompleted(todo)\r\n    }\r\n\r\n    const editarCompleted = tarea => {\r\n        // Add a new document in collection \"cities\"\r\n        db.collection(\"todos\").doc(tarea.id).set({\r\n          ...tarea, completed: !tarea.completed\r\n        })\r\n        .then(() => {\r\n          console.log(\"Document successfully written!\");\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error writing document: \", error);\r\n        });\r\n    }\r\n\r\n    return (\r\n            <div className=\"todo\">\r\n                <li className={`todo-item ${todo.completed && \"completed\"}`}>{todo.text}</li>\r\n                <button onClick={completeHandler} className={`complete-btn ${todo.completed && \"boton-rojo\"}`}>\r\n                    <i className=\"fas fa-check\"></i>\r\n                </button>\r\n                <button onClick={deleteHandler} className=\"trash-btn\">\r\n                    <i className=\"fas fa-trash\"></i>\r\n                </button>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Todo;\r\n","import Todo from './Todo';\r\n\r\nconst TodoList = ({todos, setTodos, filteredTodos}) => {\r\n    return(\r\n        <div>\r\n            <div className=\"todo-container\">\r\n                <ul className=\"todo-list\">\r\n                    {filteredTodos.map(todo => (\r\n                        <Todo \r\n                            todos={todos}\r\n                            todo={todo}\r\n                            setTodos={setTodos}\r\n                            key={todo.id}\r\n                        />\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoList;","const Contador = ({todos}) => {\r\n    console.log('soy todos', todos)\r\n    return (\r\n        <div class =\"contador-tareas\">\r\n            <span>Te quedan {todos.filter((todo) =>\r\n            !todo.completed).length} tareas por terminar</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Contador;","import {useState, useEffect} from 'react';\nimport {db} from './firebase-config'\nimport './App.css';\n\nimport Form from './components/Form';\nimport TodoList from './components/TodoList';\nimport Contador from './components/Contador';\n\n\nfunction App() {\n  \n  //Estos son estados\n  const [inputText, setInputText] = useState('');\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState('all');\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  const traerDesdeFirebase = () => {\n    db.collection(\"todos\").get().then((querySnapshot) => {\n      const docs = [];\n      querySnapshot.forEach((doc) => {\n          // doc.data() is never undefined for query doc snapshots\n          // console.log(doc.id, \" => \", doc.data());\n          docs.push({...doc.data(), id: doc.id})\n        });\n        setTodos(docs)\n    });\n  }\n\n\n  useEffect(() => { \n    traerDesdeFirebase();\n  }, [todos]);\n\n  useEffect(() => {\n    const filteredHandler = () => {\n      switch(status) {\n        case 'completed' :\n          setFilteredTodos(todos.filter(tarea => tarea.completed === true))\n        break;\n        case 'uncompleted' :\n          setFilteredTodos(todos.filter(tarea => tarea.completed === false))\n        break;\n        default:\n          setFilteredTodos(todos);\n      }\n    }\n    // const saveLocalTodos = () => {\n    //   localStorage.setItem('todos', JSON.stringify(todos))\n    // }\n    filteredHandler();\n    // saveLocalTodos();\n  },[todos, status])//que reaccione cuando el usuario cambie o elimine, o cuando cambie el estado\n\n\n \n\n  return (\n    <div>\n      <header>\n        <h1>Todo List</h1>\n      </header>\n      <Form \n        todos={todos}\n        setTodos={setTodos}\n        inputText={inputText}\n        setInputText={setInputText}\n        setStatus={setStatus}\n        status={status}\n      />\n      <Contador \n        todos={todos}\n      />\n      <TodoList \n        todos={todos}\n        setTodos={setTodos}\n        filteredTodos={filteredTodos}        \n      />      \n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './firebase-config'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}